[workspace.package]
version = "1.0.0"
edition = "2021"
license = "MIT OR Apache-2.0"
rust-version = "1.79.0"

[workspace]
members = [
    # -- Reth node implementation (with ExEx)
    "bin/reth",
    "crates/*",
]
default-members = ["bin/reth"]
exclude = [".github/", "**/tests/"]

resolver = "2"

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rustdoc.all = "warn"
# rust.unnameable-types = "warn"

[workspace.lints.clippy]
# These are some of clippy's nursery (i.e., experimental) lints that we like.
# By default, nursery lints are allowed. Some of the lints below have made good
# suggestions which we fixed. The others didn't have any findings, so we can
# assume they don't have that many false positives. Let's enable them to
# prevent future problems.
branches_sharing_code = "warn"
clear_with_drain = "warn"
derive_partial_eq_without_eq = "warn"
empty_line_after_outer_attr = "warn"
equatable_if_let = "warn"
imprecise_flops = "warn"
iter_on_empty_collections = "warn"
iter_with_drain = "warn"
large_stack_frames = "warn"
manual_clamp = "warn"
mutex_integer = "warn"
needless_pass_by_ref_mut = "warn"
nonstandard_macro_braces = "warn"
or_fun_call = "warn"
path_buf_push_overwrite = "warn"
read_zero_byte_vec = "warn"
redundant_clone = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
trivial_regex = "warn"
tuple_array_conversions = "warn"
uninhabited_references = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
useless_let_if_seq = "warn"
use_self = "warn"
missing_const_for_fn = "warn"
empty_line_after_doc_comments = "warn"
iter_on_single_items = "warn"
match_same_arms = "warn"
doc_markdown = "warn"
unnecessary_struct_initialization = "warn"
string_lit_as_bytes = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
type_repetition_in_bounds = "warn"
flat_map_option = "warn"
manual_assert = "warn"
manual_string_new = "warn"
naive_bytecount = "warn"
needless_bitwise_bool = "warn"
zero_sized_map_values = "warn"
single_char_pattern = "warn"
needless_continue = "warn"
enum_glob_use = "warn"
iter_without_into_iter = "warn"

# These are nursery lints which have findings. Allow them for now. Some are not
# quite mature enough for use in our codebase and some we don't really want.
# Explicitly listing should make it easier to fix in the future.
as_ptr_cast_mut = "allow"
cognitive_complexity = "allow"
collection_is_never_read = "allow"
debug_assert_with_mut_call = "allow"
fallible_impl_from = "allow"
future_not_send = "allow"
needless_collect = "allow"
non_send_fields_in_send_ty = "allow"
redundant_pub_crate = "allow"
significant_drop_in_scrutinee = "allow"
significant_drop_tightening = "allow"

# Speed up tests.
[profile.dev.package]
proptest.opt-level = 3
rand_xorshift.opt-level = 3
rand_chacha.opt-level = 3
unarray.opt-level = 3

# Meant for testing - all optimizations, but with debug assertions and overflow checks.
[profile.hivetests]
inherits = "test"
opt-level = 3
lto = "thin"

[profile.release]
opt-level = 3
lto = "thin"
debug = "line-tables-only"
strip = true
panic = "unwind"
codegen-units = 16

# Use the `--profile profiling` flag to show symbols in release mode.
# e.g. `cargo build --profile profiling`
[profile.profiling]
inherits = "release"
debug = 2
strip = false

[profile.maxperf]
inherits = "release"
lto = "fat"
codegen-units = 1

[workspace.dependencies]
exex = { path = "crates/exex" }

# reth
reth = { git = "https://github.com/paradigmxyz/reth.git", rev = "390f30a" }
reth-exex = { git = "https://github.com/paradigmxyz/reth.git", rev = "390f30a" }
reth-node-api = { git = "https://github.com/paradigmxyz/reth.git", rev = "390f30a" }
reth-node-ethereum = { git = "https://github.com/paradigmxyz/reth.git", rev = "390f30a" }
reth-node-optimism = { git = "https://github.com/paradigmxyz/reth.git", rev = "390f30a" }
reth-provider = { git = "https://github.com/paradigmxyz/reth.git", rev = "390f30a" }
reth-tracing = { git = "https://github.com/paradigmxyz/reth.git", rev = "390f30a" }

clap = "4.5.3"
eyre = "0.6.12"
futures = "0.3.30"
tokio = "1.39"
tokio-stream = "0.1"

# (de)serialization
serde_json = "1"
serde = "1"

# test utils
reth-exex-test-utils = { git = "https://github.com/paradigmxyz/reth.git", rev = "390f30a" }
reth-testing-utils = { git = "https://github.com/paradigmxyz/reth.git", rev = "390f30a" }
serial_test = "3.1.1"
